@using Dapper;
@using MySqlConnector;

@inject MySqlConnection DbConnection;

@page "/AccesoLegajo"

<PageTitle>Acceso a áreas</PageTitle>

<div class="container">
    <h1>Acceso a áreas</h1>
    
    <div class="row">
        <div class="col-sm-2">
            <p>Área</p>
        </div>
        <div class="col-sm-10">
            <InputSelect @bind-Value="Nro_area" DisplayName="Área">
                @foreach (var area in Areas)
                {
                    <option value="@area.Nro_area">@area.Nombre (seguridad @area.Nivel_seg.ToUpper())</option>
                }
            </InputSelect>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-2">
            <p>Legajo</p>
        </div>
        <div class="col-sm-10">
            <InputNumber @bind-Value="Legajo" DisplayName="Legajo" />
        </div>
    </div>
    <div class="row">
        <div class="col-sm-2">
            <p>Contraseña</p>
        </div>
        <div class="col-sm-10">
            <InputText type="password" @bind-Value="Pwd" DisplayName="Contraseña" />
        </div>
    </div>
    <div class="row">
        <div class="col-sm-2">
            <p>Entrada?</p>
        </div>
        <div class="col-sm-10">
            <InputCheckbox @bind-Value="Es_entrada" DisplayName="Entrada?" />
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <button class="btn btn-primary" @onclick="PerformAccess">Acceder</button>
        </div>
    </div>

    @if (Error)
    {
        <div class="row">
            <div class="alert alert-danger">
                <h4 class="alert-heading">Ha ocurrido un error</h4>
                <p>@Message</p>
            </div>
        </div>
    } else {
        @if (Message.Length != 0)
        {
            <div class="row">
                <div class="alert alert-success">
                    <h4 class="alert-heading">@Message</h4>
                    <p></p>
                </div>
            </div>
        }
    }
</div>

@code{
    private int Legajo = 0;
    private int Nro_area = 0;
    private string Pwd = String.Empty;
    private bool Es_entrada = false;

    private string Message = String.Empty;
    private bool Error = false;

    private record Area(int Nro_area, string Nombre, string Nivel_seg);

    private List<Area> Areas = new();

    private static string query = @"
        SELECT
            Nro_area,
            Nombre,
            Descripcion AS Nivel_seg
        FROM Area A
        INNER JOIN Seguridad S
            ON A.Id_seg = S.Id_seg
        ORDER BY Nombre;
    ";
    
    protected override async Task OnInitializedAsync()
    {
        Areas = (await DbConnection.QueryAsync<Area>(query)).ToList();
    }

    private void PerformAccess()
    {
        Error = false;

        try
        {
            DynamicParameters parameters = new DynamicParameters();

            parameters.Add("iLegajo", Legajo);
            parameters.Add("iPwd", Pwd);
            parameters.Add("iNro_area", Nro_area);
            parameters.Add("iEs_entrada", Es_entrada);

            DbConnection.Query("SP_MovimientoPorLegajo", parameters,
                commandType: System.Data.CommandType.StoredProcedure);
            
            Message = "Acceso concedido";
        }
        catch (Exception e)
        {
            Message = e.Message;
            Error = true;
        }
    }
}